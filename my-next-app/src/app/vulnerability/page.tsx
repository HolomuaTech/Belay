'use client';
import { Box, Drawer, List, ListItem, ListItemIcon, ListItemText, ListItemButton, Typography, Breadcrumbs, Link, Modal, TextField } from '@mui/material';
import { DataGrid, GridColDef } from '@mui/x-data-grid';
// Add some icons for the drawer (you'll need to install @mui/icons-material)
import { Button } from '@mui/material';
import NavigateNextIcon from '@mui/icons-material/NavigateNext';
import SideMenu from '@/components/SideMenu';
import { useRef, useState } from 'react';

// Sample data
const rows = [
  { id: 1, Vulnerability: 'vulnerability 1', Severity: 'Severity 1', CVSS: 7.5, EPSS: 0.45, Info: 'Info 1' },
  { id: 2, Vulnerability: 'vulnerability 2', Severity: 'Severity 2', CVSS: 4.2, EPSS: 0.12, Info: 'Info 2' },
  { id: 3, Vulnerability: 'vulnerability 3', Severity: 'Severity 3', CVSS: 9.1, EPSS: 0.89, Info: 'Info 3' },
];

interface WhitelistModalProps {
  open: boolean;
  onClose: () => void;
  rowData: any;
}

const WhitelistModal = ({ open, onClose, rowData }: WhitelistModalProps) => (
  <Modal
    open={open}
    onClose={onClose}
    aria-labelledby="whitelist-modal-title"
  >
    <Box sx={{
      position: 'absolute',
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)',
      width: 400,
      bgcolor: 'background.paper',
      boxShadow: 24,
      p: 4,
      borderRadius: 1,
    }}>
      <Typography variant="h6" component="h2" sx={{ mb: 2 }}>
        Add to Whitelist
      </Typography>
      
      <Box sx={{ mb: 2 }}>
        <Typography variant="body1"><strong>Vulnerability:</strong> {rowData?.Vulnerability}</Typography>
        <Typography variant="body1"><strong>Severity:</strong> {rowData?.Severity}</Typography>
        <Typography variant="body1"><strong>CVSS:</strong> {rowData?.CVSS}</Typography>
        <Typography variant="body1"><strong>EPSS:</strong> {rowData?.EPSS}</Typography>
      </Box>

      <TextField
        fullWidth
        label="Description"
        multiline
        rows={3}
        sx={{ mb: 2 }}
      />

      <TextField
        fullWidth
        label="Notes"
        multiline
        rows={2}
        sx={{ mb: 3 }}
      />

      <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2 }}>
        <Button variant="outlined" onClick={onClose}>
          Cancel
        </Button>
        <Button 
          variant="contained"
          onClick={() => {
            console.log('Whitelist confirmed for:', rowData);
            onClose();
          }}
        >
          Add
        </Button>
      </Box>
    </Box>
  </Modal>
);

interface PoamModalProps {
  open: boolean;
  onClose: () => void;
  rowData: any;
}

const PoamModal = ({ open, onClose, rowData }: PoamModalProps) => (
  <Modal
    open={open}
    onClose={onClose}
    aria-labelledby="poam-modal-title"
  >
    <Box sx={{
      position: 'absolute',
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)',
      width: 600,
      bgcolor: 'background.paper',
      boxShadow: 24,
      p: 4,
      borderRadius: 1,
      maxHeight: '90vh',
      overflow: 'auto'
    }}>
      <Typography variant="h6" component="h2" sx={{ mb: 2 }}>
        Plan of Action & Milestones (POA&M)
      </Typography>
      
      <Box sx={{ mb: 2 }}>
        <Typography variant="body1"><strong>Vulnerability:</strong> {rowData?.Vulnerability}</Typography>
        <Typography variant="body1"><strong>Severity:</strong> {rowData?.Severity}</Typography>
        <Typography variant="body1"><strong>CVSS:</strong> {rowData?.CVSS}</Typography>
        <Typography variant="body1"><strong>EPSS:</strong> {rowData?.EPSS}</Typography>
      </Box>

      <TextField
        fullWidth
        label="Weakness Description"
        multiline
        rows={2}
        sx={{ mb: 2 }}
      />

      <TextField
        fullWidth
        label="Remediation Plan"
        multiline
        rows={3}
        sx={{ mb: 2 }}
      />

      <Box sx={{ mb: 2 }}>
        <Typography variant="subtitle1" sx={{ mb: 1 }}>Milestones</Typography>
        <TextField
          fullWidth
          label="Start Date"
          type="date"
          InputLabelProps={{ shrink: true }}
          sx={{ mb: 1 }}
        />
        <TextField
          fullWidth
          label="Completion Date"
          type="date"
          InputLabelProps={{ shrink: true }}
          sx={{ mb: 1 }}
        />
      </Box>

      <TextField
        fullWidth
        label="Resources Required"
        multiline
        rows={2}
        sx={{ mb: 2 }}
      />

      <TextField
        fullWidth
        label="Responsible Party"
        sx={{ mb: 3 }}
      />

      <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2 }}>
        <Button variant="outlined" onClick={onClose}>
          Cancel
        </Button>
        <Button 
          variant="contained"
          onClick={() => {
            console.log('POAM submitted for:', rowData);
            onClose();
          }}
        >
          Save
        </Button>
      </Box>
    </Box>
  </Modal>
);

export default function Vulnerability() {
  const [modalOpen, setModalOpen] = useState(false);
  const [poamModalOpen, setPoamModalOpen] = useState(false);
  const [selectedRow, setSelectedRow] = useState<any>(null);

  const columns: GridColDef[] = [
    { field: 'id', headerName: 'ID', width: 90 },
    { field: 'Vulnerability', headerName: 'Vulnerability', width: 130 },
    { field: 'Severity', headerName: 'Severity', width: 130 },
    { field: 'CVSS', headerName: 'CVSS', width: 60, type: 'number' },
    { 
      field: 'EPSS', 
      headerName: 'EPSS', 
      width: 60, 
      type: 'number', 
      valueFormatter: (params) => typeof params.value === 'number' ? params.value.toFixed(2) : '0.00'
    },
    { field: 'Info', headerName: 'Info', width: 90 },
    {
      field: 'actions',
      headerName: 'Actions',
      width: 200,
      renderCell: (params) => (
        <Box>
          <Button 
            variant="contained" 
            size="small" 
            sx={{ mr: 1 }}
            onClick={(event) => {
              event.stopPropagation();
              setSelectedRow(params.row);
              setModalOpen(true);
            }}
          >
            Whitelist
          </Button>
          <Button 
            variant="contained" 
            size="small"
            onClick={(event) => {
              event.stopPropagation();
              setSelectedRow(params.row);
              setPoamModalOpen(true);
            }}
          >
            POAM
          </Button>
        </Box>
      ),
    },
  ];

  const handleCloseModal = () => {
    setModalOpen(false);
    setSelectedRow(null);
  };

  const handleClosePoamModal = () => {
    setPoamModalOpen(false);
    setSelectedRow(null);
  };

  return (
    <Box sx={{ display: 'flex' }}>
      <SideMenu />

      <Box sx={{ 
        flexGrow: 1, 
        p: 3,
        height: '100vh', 
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'flex-start',
        backgroundColor: '#f5f5f5'
      }}>
        <Typography 
          variant="h4" 
          sx={{ 
            mb: 2,
            color: 'black'
          }}
        >
          Vulnerability Management
        </Typography>
        
        <Breadcrumbs 
          separator={<NavigateNextIcon fontSize="small" />}
          sx={{ mb: 3 }}
        >
          <Link 
            underline="hover" 
            color="inherit" 
            href="#" 
            sx={{ '&:hover': { cursor: 'pointer' } }}
          >
            Project
          </Link>
          <Link 
            underline="hover" 
            color="inherit" 
            href="#" 
            sx={{ '&:hover': { cursor: 'pointer' } }}
          >
            Repository
          </Link>
          <Link 
            underline="hover" 
            color="inherit" 
            href="#" 
            sx={{ '&:hover': { cursor: 'pointer' } }}
          >
            main
          </Link>
        </Breadcrumbs>
        <Box 
            sx={{ 
                backgroundColor: 'background.paper',
                p: 2,
                mb: 2,
                borderRadius: 1,
                boxShadow: 1
            }}
        >
            <Typography 
                variant="h6" 
                sx={{ color: 'text.primary', mb: 2 }}
            >
                Description:
            </Typography>
            <Typography 
                variant="body1" 
                sx={{ color: 'text.primary' }}
            >
                Manage vulnerabilities in your repository.  Changes to the whitelist will be reflected in the whitelist file in the repository.  Additionally, the whitelist will be saved in the enterprise database for analytics.
            </Typography>
        </Box>
        <Box sx={{ 
          backgroundColor: 'white', 
          padding: 2, 
          borderRadius: 1,
          width: '100%',
          boxShadow: 1
        }}>
          <Button 
            variant="contained" 
            sx={{ mb: 2 }}
            onClick={() => console.log('Upload artifact clicked')}
          >
            Upload Artifact
          </Button>
          
          <div style={{ height: 600, width: '100%' }}>
            <DataGrid
              rows={rows}
              columns={columns}
              initialState={{
                pagination: {
                  paginationModel: { pageSize: 5, page: 0 },
                },
              }}
              pageSizeOptions={[5]}
              disableRowSelectionOnClick
            />
          </div>
        </Box>
        <WhitelistModal 
          open={modalOpen}
          onClose={handleCloseModal}
          rowData={selectedRow}
        />
        <PoamModal 
          open={poamModalOpen}
          onClose={handleClosePoamModal}
          rowData={selectedRow}
        />
      </Box>
    </Box>
  );
}